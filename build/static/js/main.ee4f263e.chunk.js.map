{"version":3,"sources":["img/yelp2.png","apis/fetchData.js","context/resturantsContext.js","components/Addform.jsx","components/ReviewsStar.jsx","routes/Home.jsx","components/AddReview.jsx","routes/Reviews.jsx","routes/UpdatePage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","axios","create","baseURL","ResturantContext","createContext","ResturantContextProvider","props","useState","resturants","setResturents","selectedResturants","setSelectedResturants","reviews","setReviews","Provider","value","addResturants","resturant","children","Addform","useContext","name","setName","location","setLocation","price","setPrice","handleSubmit","e","a","preventDefault","ResturantApi","post","response","data","className","onSubmit","style","paddingLeft","type","placeholder","onChange","target","required","disabled","ReviewsStar","number","numbers","arr","i","Math","ceil","push","color","key","Home","history","useHistory","useEffect","fetchData","get","handleClick","id","stopPropagation","delete","filter","handleUpdate","handleReviews","src","home","alt","height","width","marginBottom","textAlign","fontWeight","fontSize","backgroundColor","scope","map","onClick","cursor","repeat","price_range","average_rating","marginleft","AddReview","useParams","useLocation","rating","setRating","review","setReview","sendData","pathname","Reviews","getResturant","reviewData","reviewCards","item","display","marginLeft","justifyContent","fontStretch","reduce","b","length","overflow","marginTop","UpdatePage","match","params","fetchResturant","put","htmlFor","App","exact","path","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ee4f263e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/yelp2.e54ca9c6.png\";","import axios from 'axios';\n\nexport default axios.create({\n    baseURL :\"https://postgres-yelp-clone.herokuapp.com/api/resturants\"\n})","import React ,{useState , createContext} from 'react';\n\nexport const ResturantContext = createContext()\n\nexport const ResturantContextProvider = props=>{\n\n    const [resturants , setResturents] =  useState([]);\n    const [selectedResturants , setSelectedResturants] = useState([]);\n    const [reviews , setReviews] = useState([]);\n\n    const addResturants = (resturant)=>{\n        setResturents([...resturants ,resturant] )\n    }\n    return(\n        <ResturantContext.Provider value ={{resturants, setResturents , addResturants,selectedResturants ,setSelectedResturants ,reviews , setReviews}}>\n            {props.children}\n        </ResturantContext.Provider>\n    )\n}","import React ,{ useState , useContext } from 'react';\nimport ResturantApi from './../apis/fetchData';\nimport { ResturantContext } from '../context/resturantsContext';\n\nexport default function Addform() {\n    const {addResturants} = useContext(ResturantContext);\n    const [name , setName] = useState('');\n    const [location , setLocation] = useState('');\n    const [price , setPrice] = useState('');\n\n    const  handleSubmit = async (e)=>{\n        e.preventDefault();\n\n        const response =  await ResturantApi.post('/' ,{\n            name : name ,\n            location : location,\n            price : price\n        })\n        addResturants(response.data.data.resturants);\n        \n        setName('');\n        setLocation('');\n        setPrice('');\n    }\n\n    return (\n        <div className=\"container\">\n        <form onSubmit = { handleSubmit}>\n            <div className=\"row\">\n                <div className=\"col\" style={{paddingLeft:\"0px\"}}>\n                <input type=\"text\" className=\"form-control\" placeholder=\"Name\" value = {name} onChange ={(e)=>setName(e.target.value)} required/>\n                </div>\n                <div className=\"col\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"Location\" value = {location } onChange ={(e)=>setLocation(e.target.value)} required/>\n                </div>\n                <div className=\"col\">     \n                <select className=\"custom-select\" value = {price} onChange = {(e)=>setPrice(e.target.value)} required>\n                    <option disabled>Price Range</option>\n                    <option value={1}>$</option>\n                    <option value={2}>$$</option>\n                    <option value={3}>$$$</option>\n                    <option value={4}>$$$$</option>\n                    <option value={5}>$$$$$</option>\n                </select>\n                </div>\n                <button type = \"submit\" className =\"btn btn-outline-primary\">Add </button>\n            </div>\n        </form>\n        </div>\n    )\n}\n","import React from 'react'\n\nfunction ReviewsStar(props) {\n    let number = props.numbers\n    let arr = []\n    for(let i =0 ; i<Math.ceil(number) ; i++){\n        if(number-i >= 1){\n            arr.push (\n                <i className=\"fas fa-star\"style ={{color:\"yellow\"}} key ={i}></i>\n            )\n        }else{\n            arr.push(\n                <i className=\"fas fa-star-half-alt\" style ={{color:\"yellow\"}} key={i}></i>\n            )\n        }\n    }\n    return arr\n}\n\nexport default ReviewsStar;\n","import React ,{ useContext , useEffect }from 'react';\nimport './Home.css';\nimport home from './../img/yelp2.png';\nimport Addfrom from './../components/Addform';\nimport fetchData from './../apis/fetchData';\nimport {ResturantContext} from './../context/resturantsContext';\nimport { useHistory } from \"react-router-dom\";\nimport ReviewStar from './../components/ReviewsStar';\n\nfunction Home() {\n  const { resturants, setResturents } = useContext(ResturantContext) ;\n  let history = useHistory();\n  useEffect(()=>{\n    let data = async()=>{\n    const response = await fetchData.get('/');\n    setResturents(response.data.data.resturants);\n   \n };\n    data()\n  },[setResturents])\n\n  const handleClick = async (id ,e)=>{\n    e.stopPropagation();\n    const response = await fetchData.delete(`/${id}`);\n    setResturents(resturants.filter((resturant)=>resturant.id !==id));\n  }\n\n  const handleUpdate = async (id ,e)=>{\n    e.stopPropagation();\n    history.push(`/${id}/update`);\n  }\n\n  const handleReviews = async (id)=>{\n    history.push(`/reviews/${id}`);\n  }\n\n    return (\n        <div className=\"container\">\n            <img src= {home} alt=\"wall\" style={{height :\"70vh\" , width : \"100%\" , marginBottom:\"20px\" }}/>\n            <div className=\"jumbotron jumbotron-fluid\">\n              <h1 className=\"display-4\" style={{textAlign:\"center\", fontWeight:\"800\"}}>Add Restuarant</h1>\n            </div>\n            <div style={{marginBottom:\"32px\"}}><Addfrom /></div>\n            <div>\n            <table className=\"table table-striped table-dark\">\n                <thead style={{color:\"white\" , fontWeight:\"800\", fontSize:\"1.2em\" , backgroundColor:\"#854085\" }}> \n                  <tr>\n                    <th scope=\"col\">Restaurant</th>\n                    <th scope=\"col\">Location</th>\n                    <th scope=\"col\">Price Range</th>\n                    <th scope=\"col\">Rating</th>\n                    <th scope=\"col\">Edit</th>\n                    <th scope=\"col\">Delete</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { resturants && resturants.map((resturant ,i)=>{\n                    return(\n                    <tr key={i} onClick ={()=>handleReviews(resturant.id)} style={{cursor:\"pointer\"}}>\n                      <td>{resturant.name}</td>\n                      <td>{resturant.location}</td>\n                      <td>{\"$\".repeat(resturant.price_range)}</td>\n                      <td><ReviewStar  numbers ={resturant.average_rating}/></td>\n                      <td><button type=\"button\" className=\"btn btn-outline-warning\" style={{marginleft:\"5px\"}} onClick ={(e)=>handleUpdate(resturant.id ,e)}>Update</button></td>\n                      <td><button type=\"button\" className=\"btn btn-outline-danger\" onClick ={(e)=>handleClick(resturant.id ,e)}>Delete</button></td>\n                    </tr>\n                    )\n                  })}\n                </tbody>\n              </table>\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n","import React,{ useState} from  'react';\nimport { useParams, useHistory , useLocation} from 'react-router-dom';\nimport sendData from './../apis/fetchData';\n\nfunction AddReview(props){\n    let {id} = useParams();\n    let history = useHistory();\n    let location = useLocation();\n    const [name , setName] = useState('');\n    const [rating , setRating ] = useState('');\n    const [ review , setReview ] = useState('');\n\n    const handleSubmit =async (e)=>{\n        e.preventDefault();\n        let response = await sendData.post(`/reviews/${id}` ,{ name , rating , review});\n        history.push(\"/\");\n        history.push(location.pathname);\n    }\n\n    return(\n        <div className=\"container\">\n        <form onSubmit ={ handleSubmit }> \n            <div className=\"form-row\">\n                <div className=\"form-group col-md-6\">\n                <label  style={{color : \"white\"}}>Name</label>\n                <input type=\"text\" className=\"form-control\"  value = { name } onChange ={(e)=>setName(e.target.value)}required/>\n                </div>\n                <div className=\"form-group col-md-6\">\n                <label  style={{color : \"white\"}}>Rating</label>\n                <div className=\"col\">     \n                <select className=\"custom-select\" value ={rating} onChange={(e)=>setRating(e.target.value)} required>\n                    <option disabled>Rating</option>\n                    <option value={1}>1</option>\n                    <option value={2}>2</option>\n                    <option value={3}>3</option>\n                    <option value={4}>4</option>\n                    <option value={5}>5</option>\n                </select>\n                </div>\n                </div>\n            </div>\n            <div className=\"form-group\">\n                <label style={{color : \"white\"}}>Review</label>\n                <textarea type=\"text\" className=\"form-control\"  style={{height:\"20vh\"}} value={review}  onChange ={(e)=>setReview(e.target.value)}required />\n            </div>   \n            <button type=\"submit\" className=\"btn btn-primary\">Review</button>\n        </form>\n        </div>\n    )\n}\n\nexport default AddReview;","import  React, { useContext , useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ResturantContext } from './../context/resturantsContext';\nimport getResturant from './../apis/fetchData';\nimport ReviewsStar from './../components/ReviewsStar';\nimport AddReviews from './../components/AddReview';\n\nfunction Reviews() {\n    const {id} = useParams();\n    const {selectedResturants , setSelectedResturants} = useContext(ResturantContext);\n    const {reviews ,setReviews} = useContext(ResturantContext);\n\n    useEffect(()=>{\n        const fetchData = async ()=>{\n            const response = await getResturant.get(`/${id}`)\n            const reviewData = await getResturant.get(`/reviews/${id}`);\n            setSelectedResturants(response.data.data.resturants[0]);\n            setReviews(reviewData.data.data.resturants);\n        }\n        fetchData();\n    },[]);\n\n    let reviewCards = reviews.map((item)=>{\n        return(\n        <div className=\"col-sm-4\" key ={item.id}>\n        <div className=\"card text-white bg-primary mb-3\" >\n            <div className=\"card-header\" style ={{display:\"flex\"}}>\n                <div><h5>{item.name}</h5></div>\n                <div style={{marginLeft:\"60%\" , justifyContent:\"flex-end\"}}><ReviewsStar numbers = {item.rating}/></div>\n            </div>\n            <div className=\"card-body\">\n                <p className=\"card-text\">{item.review}</p>\n            </div>\n        </div>\n        </div>\n        )\n    })\n\n    return (\n        <div className=\"container\">\n            <div className=\"jumbotron jumbotron-fluid\" style={{backgroundColor:\"black\" , textAlign:\"center\"}}>\n                <h1 className=\"display-4\" style={{color:\"white\" , fontWeight:\"800\",fontStretch:\"semi-expanded\"}}>{selectedResturants.name}</h1>\n                <ReviewsStar numbers ={(reviews.map((a)=>a.rating).reduce((a,b)=>a+b,0))/reviews.length}/>\n            </div>\n            <div className=\"row\" style={{ display:\"flex\" , overflow:\"unset\" }} >{reviewCards}</div>\n            <div className=\"conatainer\" style={{marginTop:\"20px\", marginBottom:\"20px\"}}> \n                <h1 style={{textAlign:\"center\" , color:\"white\" , fontWeight:\"700\"}}> Leave Your Feedback</h1>\n                <AddReviews id ={id}/> \n            </div>\n        </div>\n    )\n}\n\nexport default Reviews\n","import React , { useState , useEffect } from 'react';\nimport fetchResturant from './../apis/fetchData';\nimport { useHistory } from 'react-router-dom';\n\nfunction UpdatePage(props) {\n    const id = props.match.params.id;\n    const [name , setName] = useState('');\n    const [location , setLocation] = useState('');\n    const [price , setPrice ] = useState('');\n    let history = useHistory();\n    \n    useEffect(()=>{\n        const fetchData = async ()=>{\n            let response = await fetchResturant.get(`/${id}`);\n            setName(response.data.data.resturants[0].name);\n            setLocation(response.data.data.resturants[0].location );\n            setPrice(response.data.data.resturants[0].price_range)\n        };\n        fetchData()\n    },[])\n\n    const handleSubmit =(e)=>{\n        e.preventDefault();\n        fetchResturant.put(`/${id}`,{\n            name : name,\n            location:location,\n            price_range:price,\n            id : id\n        });\n        history.push('/');\n    }\n\n    return (\n        <div className=\"container\">\n        <div className=\"jumbotron jumbotron-fluid\" style={{textAlign:\"center\"}}>\n                <h1 className=\"display-4\" style={{fontWeight:\"800\"}}>Update Restaurant</h1>\n        </div>\n            <form onSubmit = {handleSubmit}>\n                <div className=\"form-group\">\n                    <label style={{color:\"white\" , fontWeight:\"500\", fontSize :\"1.2em\"}}>Name</label>\n                    <input type=\"text\" className=\"form-control\" value ={name} onChange ={(e)=>setName(e.target.value)}  style={{fontWeight:\"700\" ,fontSize:\"1em\"}}/>\n                </div>\n                <div className=\"form-group\">\n                <label style={{color:\"white\" ,fontWeight:\"500\", fontSize :\"1.2em\"}}>Location</label>\n                    <input type=\"text\" className=\"form-control\"  value ={location} onChange ={(e)=>setLocation(e.target.value)} style={{fontWeight:\"700\" ,fontSize:\"1em\"}} />\n                </div>\n                <div className=\"form-group\">\n                <label htmlFor=\"exampleFormControlSelect1\" style={{color:\"white\" ,fontWeight:\"500\", fontSize :\"1.2em\"}}>Price Range</label>\n                    <select className=\"form-control\" id=\"exampleFormControlSelect1\" value = {price} onChange = {(e)=>setPrice(e.target.value)} style={{fontWeight:\"700\" ,fontSize:\"1em\"}}>\n                        <option value={1}>1</option>\n                        <option value={2}>2</option>\n                        <option value={3}>3</option>\n                        <option value={4}>4</option>\n                        <option value={5}>5</option>\n                    </select>\n                </div>\n                <button type=\"submit\" className =\"btn btn-outline-primary\">Update</button>\n            </form>\n        </div>\n    )\n}\n\nexport default UpdatePage\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from './routes/Home';\nimport Reviews from './routes/Reviews';\nimport UpdatePage from './routes/UpdatePage';\nimport {ResturantContextProvider} from './context/resturantsContext';\n\nfunction App() {\n  return (\n    <ResturantContextProvider>\n      <div>\n        <Router>\n          <Switch>\n              <Route exact path ='/' component ={Home}></Route>\n              <Route exact path ='/reviews/:id' component ={Reviews}></Route>\n              <Route exact path ='/:id/update' component ={UpdatePage}></Route>\n          </Switch>\n        </Router>\n      </div>\n    </ResturantContextProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}